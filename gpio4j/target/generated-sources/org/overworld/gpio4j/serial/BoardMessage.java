// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: serial.proto
// Protobuf Java Version: 4.27.3

package org.overworld.gpio4j.serial;

/**
 * Protobuf type {@code serial.BoardMessage}
 */
public final class BoardMessage extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:serial.BoardMessage)
    BoardMessageOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      BoardMessage.class.getName());
  }
  // Use BoardMessage.newBuilder() to construct.
  private BoardMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private BoardMessage() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_BoardMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_BoardMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.overworld.gpio4j.serial.BoardMessage.class, org.overworld.gpio4j.serial.BoardMessage.Builder.class);
  }

  private int messageCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object message_;
  public enum MessageCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DATA(1),
    INTERRUPT(2),
    MESSAGE_NOT_SET(0);
    private final int value;
    private MessageCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageCase forNumber(int value) {
      switch (value) {
        case 1: return DATA;
        case 2: return INTERRUPT;
        case 0: return MESSAGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MessageCase
  getMessageCase() {
    return MessageCase.forNumber(
        messageCase_);
  }

  public static final int DATA_FIELD_NUMBER = 1;
  /**
   * <code>.serial.BoundDataArray data = 1;</code>
   * @return Whether the data field is set.
   */
  @java.lang.Override
  public boolean hasData() {
    return messageCase_ == 1;
  }
  /**
   * <code>.serial.BoundDataArray data = 1;</code>
   * @return The data.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.BoundDataArray getData() {
    if (messageCase_ == 1) {
       return (org.overworld.gpio4j.serial.BoundDataArray) message_;
    }
    return org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
  }
  /**
   * <code>.serial.BoundDataArray data = 1;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.BoundDataArrayOrBuilder getDataOrBuilder() {
    if (messageCase_ == 1) {
       return (org.overworld.gpio4j.serial.BoundDataArray) message_;
    }
    return org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
  }

  public static final int INTERRUPT_FIELD_NUMBER = 2;
  /**
   * <code>.serial.BoundData interrupt = 2;</code>
   * @return Whether the interrupt field is set.
   */
  @java.lang.Override
  public boolean hasInterrupt() {
    return messageCase_ == 2;
  }
  /**
   * <code>.serial.BoundData interrupt = 2;</code>
   * @return The interrupt.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.BoundData getInterrupt() {
    if (messageCase_ == 2) {
       return (org.overworld.gpio4j.serial.BoundData) message_;
    }
    return org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
  }
  /**
   * <code>.serial.BoundData interrupt = 2;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.BoundDataOrBuilder getInterruptOrBuilder() {
    if (messageCase_ == 2) {
       return (org.overworld.gpio4j.serial.BoundData) message_;
    }
    return org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (messageCase_ == 1) {
      output.writeMessage(1, (org.overworld.gpio4j.serial.BoundDataArray) message_);
    }
    if (messageCase_ == 2) {
      output.writeMessage(2, (org.overworld.gpio4j.serial.BoundData) message_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (messageCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.overworld.gpio4j.serial.BoundDataArray) message_);
    }
    if (messageCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.overworld.gpio4j.serial.BoundData) message_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.overworld.gpio4j.serial.BoardMessage)) {
      return super.equals(obj);
    }
    org.overworld.gpio4j.serial.BoardMessage other = (org.overworld.gpio4j.serial.BoardMessage) obj;

    if (!getMessageCase().equals(other.getMessageCase())) return false;
    switch (messageCase_) {
      case 1:
        if (!getData()
            .equals(other.getData())) return false;
        break;
      case 2:
        if (!getInterrupt()
            .equals(other.getInterrupt())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (messageCase_) {
      case 1:
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
        break;
      case 2:
        hash = (37 * hash) + INTERRUPT_FIELD_NUMBER;
        hash = (53 * hash) + getInterrupt().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.overworld.gpio4j.serial.BoardMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.overworld.gpio4j.serial.BoardMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.overworld.gpio4j.serial.BoardMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.overworld.gpio4j.serial.BoardMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code serial.BoardMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:serial.BoardMessage)
      org.overworld.gpio4j.serial.BoardMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_BoardMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_BoardMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.overworld.gpio4j.serial.BoardMessage.class, org.overworld.gpio4j.serial.BoardMessage.Builder.class);
    }

    // Construct using org.overworld.gpio4j.serial.BoardMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (dataBuilder_ != null) {
        dataBuilder_.clear();
      }
      if (interruptBuilder_ != null) {
        interruptBuilder_.clear();
      }
      messageCase_ = 0;
      message_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_BoardMessage_descriptor;
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.BoardMessage getDefaultInstanceForType() {
      return org.overworld.gpio4j.serial.BoardMessage.getDefaultInstance();
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.BoardMessage build() {
      org.overworld.gpio4j.serial.BoardMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.BoardMessage buildPartial() {
      org.overworld.gpio4j.serial.BoardMessage result = new org.overworld.gpio4j.serial.BoardMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(org.overworld.gpio4j.serial.BoardMessage result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(org.overworld.gpio4j.serial.BoardMessage result) {
      result.messageCase_ = messageCase_;
      result.message_ = this.message_;
      if (messageCase_ == 1 &&
          dataBuilder_ != null) {
        result.message_ = dataBuilder_.build();
      }
      if (messageCase_ == 2 &&
          interruptBuilder_ != null) {
        result.message_ = interruptBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.overworld.gpio4j.serial.BoardMessage) {
        return mergeFrom((org.overworld.gpio4j.serial.BoardMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.overworld.gpio4j.serial.BoardMessage other) {
      if (other == org.overworld.gpio4j.serial.BoardMessage.getDefaultInstance()) return this;
      switch (other.getMessageCase()) {
        case DATA: {
          mergeData(other.getData());
          break;
        }
        case INTERRUPT: {
          mergeInterrupt(other.getInterrupt());
          break;
        }
        case MESSAGE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDataFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getInterruptFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int messageCase_ = 0;
    private java.lang.Object message_;
    public MessageCase
        getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public Builder clearMessage() {
      messageCase_ = 0;
      message_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.BoundDataArray, org.overworld.gpio4j.serial.BoundDataArray.Builder, org.overworld.gpio4j.serial.BoundDataArrayOrBuilder> dataBuilder_;
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return messageCase_ == 1;
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.BoundDataArray getData() {
      if (dataBuilder_ == null) {
        if (messageCase_ == 1) {
          return (org.overworld.gpio4j.serial.BoundDataArray) message_;
        }
        return org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
      } else {
        if (messageCase_ == 1) {
          return dataBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    public Builder setData(org.overworld.gpio4j.serial.BoundDataArray value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        dataBuilder_.setMessage(value);
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    public Builder setData(
        org.overworld.gpio4j.serial.BoundDataArray.Builder builderForValue) {
      if (dataBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        dataBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    public Builder mergeData(org.overworld.gpio4j.serial.BoundDataArray value) {
      if (dataBuilder_ == null) {
        if (messageCase_ == 1 &&
            message_ != org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.BoundDataArray.newBuilder((org.overworld.gpio4j.serial.BoundDataArray) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 1) {
          dataBuilder_.mergeFrom(value);
        } else {
          dataBuilder_.setMessage(value);
        }
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
        }
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    public org.overworld.gpio4j.serial.BoundDataArray.Builder getDataBuilder() {
      return getDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.BoundDataArrayOrBuilder getDataOrBuilder() {
      if ((messageCase_ == 1) && (dataBuilder_ != null)) {
        return dataBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 1) {
          return (org.overworld.gpio4j.serial.BoundDataArray) message_;
        }
        return org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.BoundDataArray data = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.BoundDataArray, org.overworld.gpio4j.serial.BoundDataArray.Builder, org.overworld.gpio4j.serial.BoundDataArrayOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        if (!(messageCase_ == 1)) {
          message_ = org.overworld.gpio4j.serial.BoundDataArray.getDefaultInstance();
        }
        dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.BoundDataArray, org.overworld.gpio4j.serial.BoundDataArray.Builder, org.overworld.gpio4j.serial.BoundDataArrayOrBuilder>(
                (org.overworld.gpio4j.serial.BoundDataArray) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 1;
      onChanged();
      return dataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.BoundData, org.overworld.gpio4j.serial.BoundData.Builder, org.overworld.gpio4j.serial.BoundDataOrBuilder> interruptBuilder_;
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     * @return Whether the interrupt field is set.
     */
    @java.lang.Override
    public boolean hasInterrupt() {
      return messageCase_ == 2;
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     * @return The interrupt.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.BoundData getInterrupt() {
      if (interruptBuilder_ == null) {
        if (messageCase_ == 2) {
          return (org.overworld.gpio4j.serial.BoundData) message_;
        }
        return org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
      } else {
        if (messageCase_ == 2) {
          return interruptBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    public Builder setInterrupt(org.overworld.gpio4j.serial.BoundData value) {
      if (interruptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        interruptBuilder_.setMessage(value);
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    public Builder setInterrupt(
        org.overworld.gpio4j.serial.BoundData.Builder builderForValue) {
      if (interruptBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        interruptBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    public Builder mergeInterrupt(org.overworld.gpio4j.serial.BoundData value) {
      if (interruptBuilder_ == null) {
        if (messageCase_ == 2 &&
            message_ != org.overworld.gpio4j.serial.BoundData.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.BoundData.newBuilder((org.overworld.gpio4j.serial.BoundData) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 2) {
          interruptBuilder_.mergeFrom(value);
        } else {
          interruptBuilder_.setMessage(value);
        }
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    public Builder clearInterrupt() {
      if (interruptBuilder_ == null) {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
        }
        interruptBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    public org.overworld.gpio4j.serial.BoundData.Builder getInterruptBuilder() {
      return getInterruptFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.BoundDataOrBuilder getInterruptOrBuilder() {
      if ((messageCase_ == 2) && (interruptBuilder_ != null)) {
        return interruptBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 2) {
          return (org.overworld.gpio4j.serial.BoundData) message_;
        }
        return org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.BoundData interrupt = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.BoundData, org.overworld.gpio4j.serial.BoundData.Builder, org.overworld.gpio4j.serial.BoundDataOrBuilder> 
        getInterruptFieldBuilder() {
      if (interruptBuilder_ == null) {
        if (!(messageCase_ == 2)) {
          message_ = org.overworld.gpio4j.serial.BoundData.getDefaultInstance();
        }
        interruptBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.BoundData, org.overworld.gpio4j.serial.BoundData.Builder, org.overworld.gpio4j.serial.BoundDataOrBuilder>(
                (org.overworld.gpio4j.serial.BoundData) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 2;
      onChanged();
      return interruptBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:serial.BoardMessage)
  }

  // @@protoc_insertion_point(class_scope:serial.BoardMessage)
  private static final org.overworld.gpio4j.serial.BoardMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.overworld.gpio4j.serial.BoardMessage();
  }

  public static org.overworld.gpio4j.serial.BoardMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BoardMessage>
      PARSER = new com.google.protobuf.AbstractParser<BoardMessage>() {
    @java.lang.Override
    public BoardMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BoardMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BoardMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.overworld.gpio4j.serial.BoardMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

