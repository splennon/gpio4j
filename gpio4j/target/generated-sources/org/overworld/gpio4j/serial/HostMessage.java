// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: serial.proto
// Protobuf Java Version: 4.27.3

package org.overworld.gpio4j.serial;

/**
 * Protobuf type {@code serial.HostMessage}
 */
public final class HostMessage extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:serial.HostMessage)
    HostMessageOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      HostMessage.class.getName());
  }
  // Use HostMessage.newBuilder() to construct.
  private HostMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private HostMessage() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_HostMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_HostMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.overworld.gpio4j.serial.HostMessage.class, org.overworld.gpio4j.serial.HostMessage.Builder.class);
  }

  private int messageCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object message_;
  public enum MessageCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    READ(1),
    WRITE(2),
    CONFIG(3),
    DECONFIG(4),
    DUMP(5),
    MESSAGE_NOT_SET(0);
    private final int value;
    private MessageCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageCase forNumber(int value) {
      switch (value) {
        case 1: return READ;
        case 2: return WRITE;
        case 3: return CONFIG;
        case 4: return DECONFIG;
        case 5: return DUMP;
        case 0: return MESSAGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MessageCase
  getMessageCase() {
    return MessageCase.forNumber(
        messageCase_);
  }

  private int message2Case_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object message2_;
  public enum Message2Case
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    READ2(6),
    MESSAGE2_NOT_SET(0);
    private final int value;
    private Message2Case(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Message2Case valueOf(int value) {
      return forNumber(value);
    }

    public static Message2Case forNumber(int value) {
      switch (value) {
        case 6: return READ2;
        case 0: return MESSAGE2_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public Message2Case
  getMessage2Case() {
    return Message2Case.forNumber(
        message2Case_);
  }

  public static final int READ_FIELD_NUMBER = 1;
  /**
   * <code>.serial.Read read = 1;</code>
   * @return Whether the read field is set.
   */
  @java.lang.Override
  public boolean hasRead() {
    return messageCase_ == 1;
  }
  /**
   * <code>.serial.Read read = 1;</code>
   * @return The read.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Read getRead() {
    if (messageCase_ == 1) {
       return (org.overworld.gpio4j.serial.Read) message_;
    }
    return org.overworld.gpio4j.serial.Read.getDefaultInstance();
  }
  /**
   * <code>.serial.Read read = 1;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.ReadOrBuilder getReadOrBuilder() {
    if (messageCase_ == 1) {
       return (org.overworld.gpio4j.serial.Read) message_;
    }
    return org.overworld.gpio4j.serial.Read.getDefaultInstance();
  }

  public static final int WRITE_FIELD_NUMBER = 2;
  /**
   * <code>.serial.Write write = 2;</code>
   * @return Whether the write field is set.
   */
  @java.lang.Override
  public boolean hasWrite() {
    return messageCase_ == 2;
  }
  /**
   * <code>.serial.Write write = 2;</code>
   * @return The write.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Write getWrite() {
    if (messageCase_ == 2) {
       return (org.overworld.gpio4j.serial.Write) message_;
    }
    return org.overworld.gpio4j.serial.Write.getDefaultInstance();
  }
  /**
   * <code>.serial.Write write = 2;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.WriteOrBuilder getWriteOrBuilder() {
    if (messageCase_ == 2) {
       return (org.overworld.gpio4j.serial.Write) message_;
    }
    return org.overworld.gpio4j.serial.Write.getDefaultInstance();
  }

  public static final int CONFIG_FIELD_NUMBER = 3;
  /**
   * <code>.serial.Config config = 3;</code>
   * @return Whether the config field is set.
   */
  @java.lang.Override
  public boolean hasConfig() {
    return messageCase_ == 3;
  }
  /**
   * <code>.serial.Config config = 3;</code>
   * @return The config.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Config getConfig() {
    if (messageCase_ == 3) {
       return (org.overworld.gpio4j.serial.Config) message_;
    }
    return org.overworld.gpio4j.serial.Config.getDefaultInstance();
  }
  /**
   * <code>.serial.Config config = 3;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.ConfigOrBuilder getConfigOrBuilder() {
    if (messageCase_ == 3) {
       return (org.overworld.gpio4j.serial.Config) message_;
    }
    return org.overworld.gpio4j.serial.Config.getDefaultInstance();
  }

  public static final int DECONFIG_FIELD_NUMBER = 4;
  /**
   * <code>.serial.Deconfig deconfig = 4;</code>
   * @return Whether the deconfig field is set.
   */
  @java.lang.Override
  public boolean hasDeconfig() {
    return messageCase_ == 4;
  }
  /**
   * <code>.serial.Deconfig deconfig = 4;</code>
   * @return The deconfig.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Deconfig getDeconfig() {
    if (messageCase_ == 4) {
       return (org.overworld.gpio4j.serial.Deconfig) message_;
    }
    return org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
  }
  /**
   * <code>.serial.Deconfig deconfig = 4;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.DeconfigOrBuilder getDeconfigOrBuilder() {
    if (messageCase_ == 4) {
       return (org.overworld.gpio4j.serial.Deconfig) message_;
    }
    return org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
  }

  public static final int DUMP_FIELD_NUMBER = 5;
  /**
   * <code>.serial.Dump dump = 5;</code>
   * @return Whether the dump field is set.
   */
  @java.lang.Override
  public boolean hasDump() {
    return messageCase_ == 5;
  }
  /**
   * <code>.serial.Dump dump = 5;</code>
   * @return The dump.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Dump getDump() {
    if (messageCase_ == 5) {
       return (org.overworld.gpio4j.serial.Dump) message_;
    }
    return org.overworld.gpio4j.serial.Dump.getDefaultInstance();
  }
  /**
   * <code>.serial.Dump dump = 5;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.DumpOrBuilder getDumpOrBuilder() {
    if (messageCase_ == 5) {
       return (org.overworld.gpio4j.serial.Dump) message_;
    }
    return org.overworld.gpio4j.serial.Dump.getDefaultInstance();
  }

  public static final int READ2_FIELD_NUMBER = 6;
  /**
   * <code>.serial.Read read2 = 6;</code>
   * @return Whether the read2 field is set.
   */
  @java.lang.Override
  public boolean hasRead2() {
    return message2Case_ == 6;
  }
  /**
   * <code>.serial.Read read2 = 6;</code>
   * @return The read2.
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.Read getRead2() {
    if (message2Case_ == 6) {
       return (org.overworld.gpio4j.serial.Read) message2_;
    }
    return org.overworld.gpio4j.serial.Read.getDefaultInstance();
  }
  /**
   * <code>.serial.Read read2 = 6;</code>
   */
  @java.lang.Override
  public org.overworld.gpio4j.serial.ReadOrBuilder getRead2OrBuilder() {
    if (message2Case_ == 6) {
       return (org.overworld.gpio4j.serial.Read) message2_;
    }
    return org.overworld.gpio4j.serial.Read.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (messageCase_ == 1) {
      output.writeMessage(1, (org.overworld.gpio4j.serial.Read) message_);
    }
    if (messageCase_ == 2) {
      output.writeMessage(2, (org.overworld.gpio4j.serial.Write) message_);
    }
    if (messageCase_ == 3) {
      output.writeMessage(3, (org.overworld.gpio4j.serial.Config) message_);
    }
    if (messageCase_ == 4) {
      output.writeMessage(4, (org.overworld.gpio4j.serial.Deconfig) message_);
    }
    if (messageCase_ == 5) {
      output.writeMessage(5, (org.overworld.gpio4j.serial.Dump) message_);
    }
    if (message2Case_ == 6) {
      output.writeMessage(6, (org.overworld.gpio4j.serial.Read) message2_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (messageCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.overworld.gpio4j.serial.Read) message_);
    }
    if (messageCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.overworld.gpio4j.serial.Write) message_);
    }
    if (messageCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.overworld.gpio4j.serial.Config) message_);
    }
    if (messageCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.overworld.gpio4j.serial.Deconfig) message_);
    }
    if (messageCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.overworld.gpio4j.serial.Dump) message_);
    }
    if (message2Case_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.overworld.gpio4j.serial.Read) message2_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.overworld.gpio4j.serial.HostMessage)) {
      return super.equals(obj);
    }
    org.overworld.gpio4j.serial.HostMessage other = (org.overworld.gpio4j.serial.HostMessage) obj;

    if (!getMessageCase().equals(other.getMessageCase())) return false;
    switch (messageCase_) {
      case 1:
        if (!getRead()
            .equals(other.getRead())) return false;
        break;
      case 2:
        if (!getWrite()
            .equals(other.getWrite())) return false;
        break;
      case 3:
        if (!getConfig()
            .equals(other.getConfig())) return false;
        break;
      case 4:
        if (!getDeconfig()
            .equals(other.getDeconfig())) return false;
        break;
      case 5:
        if (!getDump()
            .equals(other.getDump())) return false;
        break;
      case 0:
      default:
    }
    if (!getMessage2Case().equals(other.getMessage2Case())) return false;
    switch (message2Case_) {
      case 6:
        if (!getRead2()
            .equals(other.getRead2())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (messageCase_) {
      case 1:
        hash = (37 * hash) + READ_FIELD_NUMBER;
        hash = (53 * hash) + getRead().hashCode();
        break;
      case 2:
        hash = (37 * hash) + WRITE_FIELD_NUMBER;
        hash = (53 * hash) + getWrite().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DECONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDeconfig().hashCode();
        break;
      case 5:
        hash = (37 * hash) + DUMP_FIELD_NUMBER;
        hash = (53 * hash) + getDump().hashCode();
        break;
      case 0:
      default:
    }
    switch (message2Case_) {
      case 6:
        hash = (37 * hash) + READ2_FIELD_NUMBER;
        hash = (53 * hash) + getRead2().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.overworld.gpio4j.serial.HostMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.overworld.gpio4j.serial.HostMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.overworld.gpio4j.serial.HostMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.overworld.gpio4j.serial.HostMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code serial.HostMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:serial.HostMessage)
      org.overworld.gpio4j.serial.HostMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_HostMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_HostMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.overworld.gpio4j.serial.HostMessage.class, org.overworld.gpio4j.serial.HostMessage.Builder.class);
    }

    // Construct using org.overworld.gpio4j.serial.HostMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (readBuilder_ != null) {
        readBuilder_.clear();
      }
      if (writeBuilder_ != null) {
        writeBuilder_.clear();
      }
      if (configBuilder_ != null) {
        configBuilder_.clear();
      }
      if (deconfigBuilder_ != null) {
        deconfigBuilder_.clear();
      }
      if (dumpBuilder_ != null) {
        dumpBuilder_.clear();
      }
      if (read2Builder_ != null) {
        read2Builder_.clear();
      }
      messageCase_ = 0;
      message_ = null;
      message2Case_ = 0;
      message2_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.overworld.gpio4j.serial.SerialProtos.internal_static_serial_HostMessage_descriptor;
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.HostMessage getDefaultInstanceForType() {
      return org.overworld.gpio4j.serial.HostMessage.getDefaultInstance();
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.HostMessage build() {
      org.overworld.gpio4j.serial.HostMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.overworld.gpio4j.serial.HostMessage buildPartial() {
      org.overworld.gpio4j.serial.HostMessage result = new org.overworld.gpio4j.serial.HostMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(org.overworld.gpio4j.serial.HostMessage result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(org.overworld.gpio4j.serial.HostMessage result) {
      result.messageCase_ = messageCase_;
      result.message_ = this.message_;
      if (messageCase_ == 1 &&
          readBuilder_ != null) {
        result.message_ = readBuilder_.build();
      }
      if (messageCase_ == 2 &&
          writeBuilder_ != null) {
        result.message_ = writeBuilder_.build();
      }
      if (messageCase_ == 3 &&
          configBuilder_ != null) {
        result.message_ = configBuilder_.build();
      }
      if (messageCase_ == 4 &&
          deconfigBuilder_ != null) {
        result.message_ = deconfigBuilder_.build();
      }
      if (messageCase_ == 5 &&
          dumpBuilder_ != null) {
        result.message_ = dumpBuilder_.build();
      }
      result.message2Case_ = message2Case_;
      result.message2_ = this.message2_;
      if (message2Case_ == 6 &&
          read2Builder_ != null) {
        result.message2_ = read2Builder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.overworld.gpio4j.serial.HostMessage) {
        return mergeFrom((org.overworld.gpio4j.serial.HostMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.overworld.gpio4j.serial.HostMessage other) {
      if (other == org.overworld.gpio4j.serial.HostMessage.getDefaultInstance()) return this;
      switch (other.getMessageCase()) {
        case READ: {
          mergeRead(other.getRead());
          break;
        }
        case WRITE: {
          mergeWrite(other.getWrite());
          break;
        }
        case CONFIG: {
          mergeConfig(other.getConfig());
          break;
        }
        case DECONFIG: {
          mergeDeconfig(other.getDeconfig());
          break;
        }
        case DUMP: {
          mergeDump(other.getDump());
          break;
        }
        case MESSAGE_NOT_SET: {
          break;
        }
      }
      switch (other.getMessage2Case()) {
        case READ2: {
          mergeRead2(other.getRead2());
          break;
        }
        case MESSAGE2_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getReadFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getWriteFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getDeconfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getDumpFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getRead2FieldBuilder().getBuilder(),
                  extensionRegistry);
              message2Case_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int messageCase_ = 0;
    private java.lang.Object message_;
    public MessageCase
        getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public Builder clearMessage() {
      messageCase_ = 0;
      message_ = null;
      onChanged();
      return this;
    }

    private int message2Case_ = 0;
    private java.lang.Object message2_;
    public Message2Case
        getMessage2Case() {
      return Message2Case.forNumber(
          message2Case_);
    }

    public Builder clearMessage2() {
      message2Case_ = 0;
      message2_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder> readBuilder_;
    /**
     * <code>.serial.Read read = 1;</code>
     * @return Whether the read field is set.
     */
    @java.lang.Override
    public boolean hasRead() {
      return messageCase_ == 1;
    }
    /**
     * <code>.serial.Read read = 1;</code>
     * @return The read.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Read getRead() {
      if (readBuilder_ == null) {
        if (messageCase_ == 1) {
          return (org.overworld.gpio4j.serial.Read) message_;
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      } else {
        if (messageCase_ == 1) {
          return readBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    public Builder setRead(org.overworld.gpio4j.serial.Read value) {
      if (readBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        readBuilder_.setMessage(value);
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    public Builder setRead(
        org.overworld.gpio4j.serial.Read.Builder builderForValue) {
      if (readBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        readBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    public Builder mergeRead(org.overworld.gpio4j.serial.Read value) {
      if (readBuilder_ == null) {
        if (messageCase_ == 1 &&
            message_ != org.overworld.gpio4j.serial.Read.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.Read.newBuilder((org.overworld.gpio4j.serial.Read) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 1) {
          readBuilder_.mergeFrom(value);
        } else {
          readBuilder_.setMessage(value);
        }
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    public Builder clearRead() {
      if (readBuilder_ == null) {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
        }
        readBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    public org.overworld.gpio4j.serial.Read.Builder getReadBuilder() {
      return getReadFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.ReadOrBuilder getReadOrBuilder() {
      if ((messageCase_ == 1) && (readBuilder_ != null)) {
        return readBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 1) {
          return (org.overworld.gpio4j.serial.Read) message_;
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Read read = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder> 
        getReadFieldBuilder() {
      if (readBuilder_ == null) {
        if (!(messageCase_ == 1)) {
          message_ = org.overworld.gpio4j.serial.Read.getDefaultInstance();
        }
        readBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder>(
                (org.overworld.gpio4j.serial.Read) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 1;
      onChanged();
      return readBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Write, org.overworld.gpio4j.serial.Write.Builder, org.overworld.gpio4j.serial.WriteOrBuilder> writeBuilder_;
    /**
     * <code>.serial.Write write = 2;</code>
     * @return Whether the write field is set.
     */
    @java.lang.Override
    public boolean hasWrite() {
      return messageCase_ == 2;
    }
    /**
     * <code>.serial.Write write = 2;</code>
     * @return The write.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Write getWrite() {
      if (writeBuilder_ == null) {
        if (messageCase_ == 2) {
          return (org.overworld.gpio4j.serial.Write) message_;
        }
        return org.overworld.gpio4j.serial.Write.getDefaultInstance();
      } else {
        if (messageCase_ == 2) {
          return writeBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Write.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    public Builder setWrite(org.overworld.gpio4j.serial.Write value) {
      if (writeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        writeBuilder_.setMessage(value);
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    public Builder setWrite(
        org.overworld.gpio4j.serial.Write.Builder builderForValue) {
      if (writeBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        writeBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    public Builder mergeWrite(org.overworld.gpio4j.serial.Write value) {
      if (writeBuilder_ == null) {
        if (messageCase_ == 2 &&
            message_ != org.overworld.gpio4j.serial.Write.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.Write.newBuilder((org.overworld.gpio4j.serial.Write) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 2) {
          writeBuilder_.mergeFrom(value);
        } else {
          writeBuilder_.setMessage(value);
        }
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    public Builder clearWrite() {
      if (writeBuilder_ == null) {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
        }
        writeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    public org.overworld.gpio4j.serial.Write.Builder getWriteBuilder() {
      return getWriteFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.WriteOrBuilder getWriteOrBuilder() {
      if ((messageCase_ == 2) && (writeBuilder_ != null)) {
        return writeBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 2) {
          return (org.overworld.gpio4j.serial.Write) message_;
        }
        return org.overworld.gpio4j.serial.Write.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Write write = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Write, org.overworld.gpio4j.serial.Write.Builder, org.overworld.gpio4j.serial.WriteOrBuilder> 
        getWriteFieldBuilder() {
      if (writeBuilder_ == null) {
        if (!(messageCase_ == 2)) {
          message_ = org.overworld.gpio4j.serial.Write.getDefaultInstance();
        }
        writeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Write, org.overworld.gpio4j.serial.Write.Builder, org.overworld.gpio4j.serial.WriteOrBuilder>(
                (org.overworld.gpio4j.serial.Write) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 2;
      onChanged();
      return writeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Config, org.overworld.gpio4j.serial.Config.Builder, org.overworld.gpio4j.serial.ConfigOrBuilder> configBuilder_;
    /**
     * <code>.serial.Config config = 3;</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return messageCase_ == 3;
    }
    /**
     * <code>.serial.Config config = 3;</code>
     * @return The config.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Config getConfig() {
      if (configBuilder_ == null) {
        if (messageCase_ == 3) {
          return (org.overworld.gpio4j.serial.Config) message_;
        }
        return org.overworld.gpio4j.serial.Config.getDefaultInstance();
      } else {
        if (messageCase_ == 3) {
          return configBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Config.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    public Builder setConfig(org.overworld.gpio4j.serial.Config value) {
      if (configBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        configBuilder_.setMessage(value);
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    public Builder setConfig(
        org.overworld.gpio4j.serial.Config.Builder builderForValue) {
      if (configBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        configBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    public Builder mergeConfig(org.overworld.gpio4j.serial.Config value) {
      if (configBuilder_ == null) {
        if (messageCase_ == 3 &&
            message_ != org.overworld.gpio4j.serial.Config.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.Config.newBuilder((org.overworld.gpio4j.serial.Config) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 3) {
          configBuilder_.mergeFrom(value);
        } else {
          configBuilder_.setMessage(value);
        }
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    public Builder clearConfig() {
      if (configBuilder_ == null) {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
        }
        configBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    public org.overworld.gpio4j.serial.Config.Builder getConfigBuilder() {
      return getConfigFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.ConfigOrBuilder getConfigOrBuilder() {
      if ((messageCase_ == 3) && (configBuilder_ != null)) {
        return configBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 3) {
          return (org.overworld.gpio4j.serial.Config) message_;
        }
        return org.overworld.gpio4j.serial.Config.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Config config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Config, org.overworld.gpio4j.serial.Config.Builder, org.overworld.gpio4j.serial.ConfigOrBuilder> 
        getConfigFieldBuilder() {
      if (configBuilder_ == null) {
        if (!(messageCase_ == 3)) {
          message_ = org.overworld.gpio4j.serial.Config.getDefaultInstance();
        }
        configBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Config, org.overworld.gpio4j.serial.Config.Builder, org.overworld.gpio4j.serial.ConfigOrBuilder>(
                (org.overworld.gpio4j.serial.Config) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 3;
      onChanged();
      return configBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Deconfig, org.overworld.gpio4j.serial.Deconfig.Builder, org.overworld.gpio4j.serial.DeconfigOrBuilder> deconfigBuilder_;
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     * @return Whether the deconfig field is set.
     */
    @java.lang.Override
    public boolean hasDeconfig() {
      return messageCase_ == 4;
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     * @return The deconfig.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Deconfig getDeconfig() {
      if (deconfigBuilder_ == null) {
        if (messageCase_ == 4) {
          return (org.overworld.gpio4j.serial.Deconfig) message_;
        }
        return org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
      } else {
        if (messageCase_ == 4) {
          return deconfigBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    public Builder setDeconfig(org.overworld.gpio4j.serial.Deconfig value) {
      if (deconfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        deconfigBuilder_.setMessage(value);
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    public Builder setDeconfig(
        org.overworld.gpio4j.serial.Deconfig.Builder builderForValue) {
      if (deconfigBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        deconfigBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    public Builder mergeDeconfig(org.overworld.gpio4j.serial.Deconfig value) {
      if (deconfigBuilder_ == null) {
        if (messageCase_ == 4 &&
            message_ != org.overworld.gpio4j.serial.Deconfig.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.Deconfig.newBuilder((org.overworld.gpio4j.serial.Deconfig) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 4) {
          deconfigBuilder_.mergeFrom(value);
        } else {
          deconfigBuilder_.setMessage(value);
        }
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    public Builder clearDeconfig() {
      if (deconfigBuilder_ == null) {
        if (messageCase_ == 4) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 4) {
          messageCase_ = 0;
          message_ = null;
        }
        deconfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    public org.overworld.gpio4j.serial.Deconfig.Builder getDeconfigBuilder() {
      return getDeconfigFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.DeconfigOrBuilder getDeconfigOrBuilder() {
      if ((messageCase_ == 4) && (deconfigBuilder_ != null)) {
        return deconfigBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 4) {
          return (org.overworld.gpio4j.serial.Deconfig) message_;
        }
        return org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Deconfig deconfig = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Deconfig, org.overworld.gpio4j.serial.Deconfig.Builder, org.overworld.gpio4j.serial.DeconfigOrBuilder> 
        getDeconfigFieldBuilder() {
      if (deconfigBuilder_ == null) {
        if (!(messageCase_ == 4)) {
          message_ = org.overworld.gpio4j.serial.Deconfig.getDefaultInstance();
        }
        deconfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Deconfig, org.overworld.gpio4j.serial.Deconfig.Builder, org.overworld.gpio4j.serial.DeconfigOrBuilder>(
                (org.overworld.gpio4j.serial.Deconfig) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 4;
      onChanged();
      return deconfigBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Dump, org.overworld.gpio4j.serial.Dump.Builder, org.overworld.gpio4j.serial.DumpOrBuilder> dumpBuilder_;
    /**
     * <code>.serial.Dump dump = 5;</code>
     * @return Whether the dump field is set.
     */
    @java.lang.Override
    public boolean hasDump() {
      return messageCase_ == 5;
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     * @return The dump.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Dump getDump() {
      if (dumpBuilder_ == null) {
        if (messageCase_ == 5) {
          return (org.overworld.gpio4j.serial.Dump) message_;
        }
        return org.overworld.gpio4j.serial.Dump.getDefaultInstance();
      } else {
        if (messageCase_ == 5) {
          return dumpBuilder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Dump.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    public Builder setDump(org.overworld.gpio4j.serial.Dump value) {
      if (dumpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        dumpBuilder_.setMessage(value);
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    public Builder setDump(
        org.overworld.gpio4j.serial.Dump.Builder builderForValue) {
      if (dumpBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        dumpBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    public Builder mergeDump(org.overworld.gpio4j.serial.Dump value) {
      if (dumpBuilder_ == null) {
        if (messageCase_ == 5 &&
            message_ != org.overworld.gpio4j.serial.Dump.getDefaultInstance()) {
          message_ = org.overworld.gpio4j.serial.Dump.newBuilder((org.overworld.gpio4j.serial.Dump) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 5) {
          dumpBuilder_.mergeFrom(value);
        } else {
          dumpBuilder_.setMessage(value);
        }
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    public Builder clearDump() {
      if (dumpBuilder_ == null) {
        if (messageCase_ == 5) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 5) {
          messageCase_ = 0;
          message_ = null;
        }
        dumpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    public org.overworld.gpio4j.serial.Dump.Builder getDumpBuilder() {
      return getDumpFieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.DumpOrBuilder getDumpOrBuilder() {
      if ((messageCase_ == 5) && (dumpBuilder_ != null)) {
        return dumpBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 5) {
          return (org.overworld.gpio4j.serial.Dump) message_;
        }
        return org.overworld.gpio4j.serial.Dump.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Dump dump = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Dump, org.overworld.gpio4j.serial.Dump.Builder, org.overworld.gpio4j.serial.DumpOrBuilder> 
        getDumpFieldBuilder() {
      if (dumpBuilder_ == null) {
        if (!(messageCase_ == 5)) {
          message_ = org.overworld.gpio4j.serial.Dump.getDefaultInstance();
        }
        dumpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Dump, org.overworld.gpio4j.serial.Dump.Builder, org.overworld.gpio4j.serial.DumpOrBuilder>(
                (org.overworld.gpio4j.serial.Dump) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 5;
      onChanged();
      return dumpBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder> read2Builder_;
    /**
     * <code>.serial.Read read2 = 6;</code>
     * @return Whether the read2 field is set.
     */
    @java.lang.Override
    public boolean hasRead2() {
      return message2Case_ == 6;
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     * @return The read2.
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.Read getRead2() {
      if (read2Builder_ == null) {
        if (message2Case_ == 6) {
          return (org.overworld.gpio4j.serial.Read) message2_;
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      } else {
        if (message2Case_ == 6) {
          return read2Builder_.getMessage();
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    public Builder setRead2(org.overworld.gpio4j.serial.Read value) {
      if (read2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message2_ = value;
        onChanged();
      } else {
        read2Builder_.setMessage(value);
      }
      message2Case_ = 6;
      return this;
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    public Builder setRead2(
        org.overworld.gpio4j.serial.Read.Builder builderForValue) {
      if (read2Builder_ == null) {
        message2_ = builderForValue.build();
        onChanged();
      } else {
        read2Builder_.setMessage(builderForValue.build());
      }
      message2Case_ = 6;
      return this;
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    public Builder mergeRead2(org.overworld.gpio4j.serial.Read value) {
      if (read2Builder_ == null) {
        if (message2Case_ == 6 &&
            message2_ != org.overworld.gpio4j.serial.Read.getDefaultInstance()) {
          message2_ = org.overworld.gpio4j.serial.Read.newBuilder((org.overworld.gpio4j.serial.Read) message2_)
              .mergeFrom(value).buildPartial();
        } else {
          message2_ = value;
        }
        onChanged();
      } else {
        if (message2Case_ == 6) {
          read2Builder_.mergeFrom(value);
        } else {
          read2Builder_.setMessage(value);
        }
      }
      message2Case_ = 6;
      return this;
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    public Builder clearRead2() {
      if (read2Builder_ == null) {
        if (message2Case_ == 6) {
          message2Case_ = 0;
          message2_ = null;
          onChanged();
        }
      } else {
        if (message2Case_ == 6) {
          message2Case_ = 0;
          message2_ = null;
        }
        read2Builder_.clear();
      }
      return this;
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    public org.overworld.gpio4j.serial.Read.Builder getRead2Builder() {
      return getRead2FieldBuilder().getBuilder();
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    @java.lang.Override
    public org.overworld.gpio4j.serial.ReadOrBuilder getRead2OrBuilder() {
      if ((message2Case_ == 6) && (read2Builder_ != null)) {
        return read2Builder_.getMessageOrBuilder();
      } else {
        if (message2Case_ == 6) {
          return (org.overworld.gpio4j.serial.Read) message2_;
        }
        return org.overworld.gpio4j.serial.Read.getDefaultInstance();
      }
    }
    /**
     * <code>.serial.Read read2 = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder> 
        getRead2FieldBuilder() {
      if (read2Builder_ == null) {
        if (!(message2Case_ == 6)) {
          message2_ = org.overworld.gpio4j.serial.Read.getDefaultInstance();
        }
        read2Builder_ = new com.google.protobuf.SingleFieldBuilder<
            org.overworld.gpio4j.serial.Read, org.overworld.gpio4j.serial.Read.Builder, org.overworld.gpio4j.serial.ReadOrBuilder>(
                (org.overworld.gpio4j.serial.Read) message2_,
                getParentForChildren(),
                isClean());
        message2_ = null;
      }
      message2Case_ = 6;
      onChanged();
      return read2Builder_;
    }

    // @@protoc_insertion_point(builder_scope:serial.HostMessage)
  }

  // @@protoc_insertion_point(class_scope:serial.HostMessage)
  private static final org.overworld.gpio4j.serial.HostMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.overworld.gpio4j.serial.HostMessage();
  }

  public static org.overworld.gpio4j.serial.HostMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HostMessage>
      PARSER = new com.google.protobuf.AbstractParser<HostMessage>() {
    @java.lang.Override
    public HostMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HostMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HostMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.overworld.gpio4j.serial.HostMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

